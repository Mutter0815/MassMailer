
services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pass}
      POSTGRES_DB: ${POSTGRES_DB:-massmailer}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ../migrations:/migrations:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-user}"]
      interval: 5s
      timeout: 5s
      retries: 10


  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.15.0
    environment:
      DATA_SOURCE_NAME: postgresql://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-pass}@postgres:5432/${POSTGRES_DB:-massmailer}?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "9187:9187"   

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    ports:
      - "127.0.0.1:35672:5672"     # AMQP
      - "127.0.0.1:30080:15672"    # UI
      - "127.0.0.1:35692:15692"    # Prometheus metrics (rabbitmq_prometheus)
    environment:
    
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-rabbitmq_prometheus return_per_object_metrics true"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 10

  campaign-api:
    build:
      context: ..
      dockerfile: services/campaign-api/Dockerfile
    environment:
      DB_DSN: postgres://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-pass}@postgres:5432/${POSTGRES_DB:-massmailer}?sslmode=disable
      RMQ_URL: ${RMQ_URL:-amqp://guest:guest@rabbitmq:5672/}
      PORT: ${API_PORT:-8080}
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "${API_PORT:-8080}:8080"

  sender-worker:
    build:
      context: ..
      dockerfile: services/sender-worker/Dockerfile
    environment:
      DB_DSN: postgres://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-pass}@postgres:5432/${POSTGRES_DB:-massmailer}?sslmode=disable
      RMQ_URL: ${RMQ_URL:-amqp://guest:guest@rabbitmq:5672/}
      QUEUE: send_jobs
      METRICS_ADDR: ":9090"     
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "9090:9090"

  prometheus:
    image: prom/prometheus:v2.54.1
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.enable-lifecycle"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      campaign-api:
        condition: service_started
      sender-worker:
        condition: service_started
      postgres-exporter:
        condition: service_started
      rabbitmq:
        condition: service_started
    ports:
      - "9095:9090"

volumes:
  pgdata:
